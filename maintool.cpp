#include <iostream>
#include <filesystem>
#include <cstdlib> // for system()
#include <vector>

namespace fs = std::filesystem;

using namespace std;

// Function to count the number of files in a given directory
int countFilesInDirectory(const string& directoryPath) {
    int fileCount = 0;
    for (const auto& entry : fs::directory_iterator(directoryPath)) {
        if (fs::is_regular_file(entry.status())) {
            fileCount++;
        }
    }
    return fileCount;
}

int main() {
    // Step 1: Compile slither_main.cpp, aderyn_main.cpp, and smartcheck_main.cpp
    cout << "Compiling slither_main.cpp..." << endl;
    if (system("g++ -o slither_main slither_main.cpp") != 0) {
        cerr << "Error compiling slither_main.cpp" << endl;
        return 1;
    }

    cout << "Compiling aderyn_main.cpp..." << endl;
    if (system("g++ -o aderyn_main aderyn_main.cpp") != 0) {
        cerr << "Error compiling aderyn_main.cpp" << endl;
        return 1;
    }

    cout << "Compiling smartcheck_main.cpp..." << endl;
    if (system("g++ -o smartcheck_main smartcheck_main.cpp") != 0) {
        cerr << "Error compiling smartcheck_main.cpp" << endl;
        return 1;
    }

    // Step 2: Run the compiled programs sequentially
    cout << "Running slither_main..." << endl;
    system("./slither_main");

    cout << "Running aderyn_main..." << endl;
    system("./aderyn_main");

    cout << "Running smartcheck_main..." << endl;
    system("./smartcheck_main");

    // Step 3: Count the number of non-vulnerable contracts
    string nonVulnerableDir = "non_vulnerable_contracts";
    int nonVulnerableCount = countFilesInDirectory(nonVulnerableDir);
    
    // Step 4: Count the total number of contracts in the output directory
    string outputDir = "./output";
    int totalContracts = countFilesInDirectory(outputDir);
    
    // Step 5: Calculate the number of vulnerable contracts
    int vulnerableCount = totalContracts - nonVulnerableCount;

    // Step 6: Print the results
    cout << "No. of Non-Vulnerable Contracts: " << nonVulnerableCount << endl;
    cout << "No. of Vulnerable Contracts: " << vulnerableCount << endl;

    return 0;
}